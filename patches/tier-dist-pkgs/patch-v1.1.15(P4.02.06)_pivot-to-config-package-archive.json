{
  "showInUI": true,
  "blockId": "patch-v1.1.15(P4.02.06)_pivot-to-config-package-archive",
  "description": "Official project pivot: discontinue platform installer pipelines for configs, switch to archive+script config/package distribution, update docs, and prepare for future app installer pipeline if needed.",
  "target": "DEV",
  "version": "v1.1.15(P4.02.06)",
  "dependencies": [
    "patch-v1.1.14(P4.02.05)_halt-windows-pipeline-requirements-decision"
  ],
  "prerequisites": [
    "All platform installer workflows (.yml) disabled/archived as .DISABLED",
    "All previous pipeline runs halted and summary/decision committed"
  ],
  "preMutationValidation": {
    "shell": [
      "ls .github/workflows | grep DISABLED && echo '✅ All installer pipelines disabled.'"
    ]
  },
  "mutations": {
    "shell": [
      "# 1. Remove or archive all platform installer pipelines for config-only releases",
      "for f in .github/workflows/*installer*.yml; do mv \"$f\" \"$f.DISABLED\"; done",
      "echo '✅ All platform installer workflows archived.'",
      "# 2. Create scripts/deploy-config-package.sh and scripts/deploy-config-package.ps1",
      "cat <<'EOF' > scripts/deploy-config-package.sh\n\
#!/bin/bash\n\
set -e\n\
echo 'Deploying ThoughtPilot config package...'\n\
tar -xzvf configs/thoughtpilot-config-package.tar.gz -C /opt/thoughtpilot/configs/\n\
echo '✅ Configs deployed to /opt/thoughtpilot/configs/'\n\
EOF",
      "cat <<'EOF' > scripts/deploy-config-package.ps1\n\
Write-Host 'Deploying ThoughtPilot config package...'\n\
Expand-Archive -Path 'configs/thoughtpilot-config-package.zip' -DestinationPath 'C:\\\\ProgramData\\\\ThoughtPilot\\\\configs'\n\
Write-Host '✅ Configs deployed to C:\\\\ProgramData\\\\ThoughtPilot\\\\configs'\n\
EOF",
      "chmod +x scripts/deploy-config-package.sh",
      "# 3. Zip up the current clean-tier-packages as configs/thoughtpilot-config-package.zip (PowerShell and Unix archive)",
      "mkdir -p configs",
      "zip -r configs/thoughtpilot-config-package.zip clean-tier-packages/*",
      "tar -czvf configs/thoughtpilot-config-package.tar.gz clean-tier-packages/*",
      "echo '✅ Config package archives created.'"
    ],
    "files": [
      {
        "path": "README_CONFIG_ONLY.md",
        "content": "\
# ThoughtPilot Config-Only Distribution (Pivoted)\n\
\n\
## NOTICE\n\
This release contains only configuration, feature flag, and infrastructure packages.\n\
No application installer is required or provided at this time.\n\
\n\
## How to Use\n\
- Download and extract `configs/thoughtpilot-config-package.zip` (Windows) or `configs/thoughtpilot-config-package.tar.gz` (Linux/macOS).\n\
- Run the included deployment script for your platform:\n\
    - **Linux/macOS:** `bash scripts/deploy-config-package.sh`\n\
    - **Windows:** `pwsh scripts/deploy-config-package.ps1`\n\
- Configs will be placed in the standard directory for your system.\n\
\n\
## Why This Change?\n\
- The current packages do not include any executable software or applications, only configs.\n\
- Platform-specific installers (like .exe or .pkg) would confuse users and are not appropriate for configuration-only distributions.\n\
- When a real ThoughtPilot application is available, platform installers will be added back to the CI/CD pipeline.\n\
\n\
## Support\n\
For feedback or help, open an issue or contact the project owner.\n\
"
      }
    ]
  },
  "testing": {
    "shell": [
      "# 4. Test config deployment on each platform (manual for MVP)",
      "ls configs/thoughtpilot-config-package.*",
      "bash scripts/deploy-config-package.sh || echo '✅ Linux/macOS config deployment script ran.'",
      "pwsh scripts/deploy-config-package.ps1 || echo '✅ Windows config deployment script ran.'"
    ]
  },
  "nextSteps": [
    "1. Remove/disable all platform installer pipelines for config-only releases.",
    "2. Announce pivot to all users: config/archive + script distribution is the new standard until a real app is available.",
    "3. Commit and push new config archives, scripts, and README_CONFIG_ONLY.md.",
    "4. Document decision and reasoning in main CHANGELOG and roadmap.",
    "5. If/when a real ThoughtPilot application is ready, revisit platform installer pipeline work."
  ],
  "postMutationBuild": {
    "shell": [
      "echo '✅ Project pivot to config/archive+script distribution complete. All platform installers disabled for configs.'"
    ]
  },
  "documentation": {
    "summary": "Phase 4.02.06 (AMENDED): Official project pivot—distribute only config packages as archives/scripts. All installer pipelines archived. Clear README and deployment instructions included. CI/CD will resume for app installers only when a real app is present.",
    "summaryFile": "/Users/sawyer/gitSync/.cursor-cache/CYOPS/summaries/summary-phase4.02.06-pivot-to-config-package-archive.md"
  },
  "successCriteria": [
    "No installer pipelines remain active for config-only releases",
    "Config package archives and deployment scripts exist and are documented",
    "Project roadmap/README/CHANGELOG updated to reflect new strategy"
  ],
  "rollbackPlan": [
    "Restore platform installer pipelines if a real application becomes available.",
    "Update deployment scripts and documentation for new releases."
  ],
  "validate": {
    "shell": [
      "ls configs/thoughtpilot-config-package.zip",
      "ls configs/thoughtpilot-config-package.tar.gz",
      "test -f scripts/deploy-config-package.sh",
      "test -f scripts/deploy-config-package.ps1"
    ]
  },
  "final": {
    "git": {
      "commit": "Phase 4.02.06: Official project pivot to config archive distribution, all installer pipelines disabled, scripts/docs included.",
      "tag": "CYOPS_PHASE4.02.06_CONFIG_ONLY_PIVOT"
    },
    "summary": "✅ Project pivoted: config-only packages now distributed as archives with scripts, all installer CI/CD paused until real app is available. Clear user docs and roadmap update included.",
    "summaryFile": "/Users/sawyer/gitSync/.cursor-cache/CYOPS/summaries/summary-phase4.02.06-pivot-to-config-package-archive.md"
  },
  "blockCommitOnError": true,
  "watchConsole": true,
  "execution": {
    "autoReleaseTimeoutMs": 30000,
    "onReloadHang": "Move to background and resume automatically"
  },
  "enforceValidationGate": true,
  "strictRuntimeAudit": true,
  "runDryCheck": true,
  "forceRuntimeTrace": true,
  "requireMutationProof": true,
  "requireServiceUptime": true
} 